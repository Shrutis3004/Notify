'use strict';

var Joi = require('joi');

var Utils = require('../utils');

var _require = require('../validators'),
    QueryParamSchema = _require.QueryParamSchema,
    IdSchema = _require.IdSchema;

module.exports = function (axios) {
  return {
    /**
     * Get all devices for the specified Onesignal app
     *
     * @param {Function} callback Callback function for backwards compatibility
     * @returns {Promise}
     */
    getDevices: function getDevices(appId, paginationParams, callback) {
      var _Joi$validate = Joi.validate(Object.assign({}, paginationParams, {
        app_id: appId
      }), QueryParamSchema),
          error = _Joi$validate.error;

      if (error) {
        throw error;
      }

      if (!callback || !Utils.isFunction(callback)) {
        callback = function callback() {};
      }
      return axios.get('/players?app_id=' + appId + '&limit=' + paginationParams.limit + '&offset=' + paginationParams.offset).then(function (response) {
        callback(null, response.data);
        return response.data;
      }).catch(function (err) {
        callback(err, null);
        return err;
      });
    },


    /**
     * Get details of a device
     *
     * @param {Function} callback Callback function for backwards compatibility
     * @returns {Promise}
     */
    getDevice: function getDevice(id, appId, callback) {
      var idError = Joi.validate(id, IdSchema).error;

      if (idError) {
        throw idError;
      }

      var appIdError = Joi.validate(appId, IdSchema).error;

      if (appIdError) {
        throw appIdError;
      }

      if (!callback || !Utils.isFunction(callback)) {
        callback = function callback() {};
      }
      return axios.get('/players/' + id + '?app_id=' + appId).then(function (response) {
        callback(null, response.data);
        return response.data;
      }).catch(function (err) {
        callback(err, null);
        return err;
      });
    }
  };
};